// <auto-generated />
using System;
using ClinicaVeterinaria.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClinicaVeterinaria.Migrations
{
    [DbContext(typeof(ClinicaContext))]
    [Migration("20221102183554_Clinica")]
    partial class Clinica
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClinicaVeterinaria.Models.MedicoResponsavel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("MedicosResponsaveis");
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.MedicoResponsavel", b =>
                {
                    b.HasOne("ClinicaVeterinaria.Models.Paciente", "Paciente")
                        .WithMany("MedicoResponsavelList")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Paciente", b =>
                {
                    b.HasOne("ClinicaVeterinaria.Models.Tutor", "Tutor")
                        .WithMany("PacienteList")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Paciente", b =>
                {
                    b.Navigation("MedicoResponsavelList");
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Tutor", b =>
                {
                    b.Navigation("PacienteList");
                });
#pragma warning restore 612, 618
        }
    }
}
