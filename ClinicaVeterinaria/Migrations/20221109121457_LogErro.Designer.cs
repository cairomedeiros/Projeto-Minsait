// <auto-generated />
using System;
using ClinicaVeterinaria.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClinicaVeterinaria.Migrations
{
    [DbContext(typeof(ClinicaContext))]
    [Migration("20221109121457_LogErro")]
    partial class LogErro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClinicaVeterinaria.Models.LogErro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataHoraRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InnerException")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("LogErros");
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("EResultadoTriagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("Idade")
                        .HasMaxLength(2)
                        .HasColumnType("double precision");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<double>("Peso")
                        .HasMaxLength(4)
                        .HasColumnType("double precision");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("368a4087-3de7-4bc8-921e-aa6a5a9be54a"),
                            Cor = "Preta",
                            EResultadoTriagem = "Odontologia",
                            Especie = "Cachorro",
                            Idade = 4.0,
                            Nome = "Nymeria",
                            Peso = 22.0,
                            Raca = "Pastor Alemão",
                            TutorId = new Guid("ea249baa-c22a-495f-981b-ed6d7c9ea029")
                        },
                        new
                        {
                            Id = new Guid("234eea2a-0348-45b5-99a1-44b20f010e03"),
                            Cor = "Marrom",
                            EResultadoTriagem = "Cardiologia",
                            Especie = "Cachorro",
                            Idade = 7.0,
                            Nome = "Mel",
                            Peso = 10.0,
                            Raca = "Shitzu",
                            TutorId = new Guid("40213770-be5a-4c20-9a3b-31e405378768")
                        });
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tutores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea249baa-c22a-495f-981b-ed6d7c9ea029"),
                            CPF = "12312332124",
                            DataNascimento = new DateOnly(2000, 5, 7),
                            Endereco = "Cabedelo",
                            Nome = "Cairo",
                            Telefone = "99999999"
                        },
                        new
                        {
                            Id = new Guid("40213770-be5a-4c20-9a3b-31e405378768"),
                            CPF = "12312332124",
                            DataNascimento = new DateOnly(2002, 5, 2),
                            Endereco = "JP",
                            Nome = "Rita",
                            Telefone = "99999999"
                        });
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Paciente", b =>
                {
                    b.HasOne("ClinicaVeterinaria.Models.Tutor", null)
                        .WithMany("PacienteList")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClinicaVeterinaria.Models.Tutor", b =>
                {
                    b.Navigation("PacienteList");
                });
#pragma warning restore 612, 618
        }
    }
}
